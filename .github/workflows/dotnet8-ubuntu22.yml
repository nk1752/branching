name: dotnet 8 on ubuntu 22

on:
  push:
    branches:
      - feature/patch-c
  workflow_dispatch:
    inputs:
      publish:
        description: "push to artifactory"
        required: true
        default: "false"
        type: choice
        options:
          - "true"
          - "false"
env:
  show: true
  event_name: ""
  message: "This is a test message"
  JF_REPO: "local-docker"
  JF_URL: "https://rgnadeem.jfrog.io"
  JF_USER: "nadeem.khalid@regions.com"
  PACKAGE_NAME: "bluegreen"
  IMAGE_NAME: "dotnet-base-image"
  IMAGE_TAG: "v2.1.0"
  PROJECT_NAME: "dotnet-sdk-8-ubuntu-22"


jobs:
  build-push-dotnet8-ubuntu22:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      packages: write
      id-token: write

    steps:
      - name: checkout
        uses: actions/checkout@v4
      
        # build docker image from Dockerfile
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker login to Jfrog
        uses: docker/login-action@v2
        with:
          username: ${{ env.JF_USER }}
          password: ${{ secrets.JF_DOCKER_ACCESS_TOKEN }}
          registry: ${{ env.JF_URL }}
        
      - name: build docker image - sdk
        run: |
          image_name="dotnet-sdk-8-ubuntu22"
          docker build -f ./${{env.PROJECT_NAME}}/Dockerfile.sdk \
                -t $image_name \
                --build-arg DOTNET_TYPE="${image_name}" .
          docker images
          docker tag $image_name rgnadeem.jfrog.io/local-docker/$image_name:${{ env.IMAGE_TAG}}
          docker push rgnadeem.jfrog.io/local-docker/$image_name:${{ env.IMAGE_TAG}}

      - name: build docker image - aspnetcore
        run: |
          image_name="dotnet-aspnetcore-8-ubuntu22"
          docker build -f ./${{env.PROJECT_NAME}}/Dockerfile.aspnet \
                -t $image_name \
                --build-arg DOTNET_TYPE="${image_name}" .
          docker images
          docker tag $image_name rgnadeem.jfrog.io/local-docker/$image_name:${{ env.IMAGE_TAG}}
          docker push rgnadeem.jfrog.io/local-docker/$image_name:${{ env.IMAGE_TAG}}

      - name: build docker image - runtime
        run: |
          image_name="dotnet-runtime-8-ubuntu22"
          docker build -f ./${{env.PROJECT_NAME}}/Dockerfile.runtime \
                -t $image_name \
                --build-arg DOTNET_TYPE="${image_name}" .
          docker images
          docker tag $image_name rgnadeem.jfrog.io/local-docker/$image_name:${{ env.IMAGE_TAG}}
          docker push rgnadeem.jfrog.io/local-docker/$image_name:${{ env.IMAGE_TAG}}